import os
import sys
import json
import logging
from PyQt5.QtWidgets import (QMainWindow, QWidget, QLabel, QPushButton, QProgressBar, QMessageBox, QComboBox)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPixmap, QIcon
from scripts.launchThread import LaunchThread
from gui.settings import Settings
from config.config import load_config, load_config_options
from scripts.serverLauncher import checkUpdateModpack, downloadUpdateModpack

# –ü—É—Ç–∏ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º –∏ —Ñ–∞–π–ª–∞–º
minecraft_directory = os.path.join(os.path.dirname(__file__), '..', '..', 'game')
logo_path = os.path.join(os.path.dirname(__file__), '..', 'assets', 'minecraft_logo.png')
version = os.path.join(minecraft_directory, 'version.json')

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setup_ui()
        self.setup_threads()
        self.load_configs()
        self.apply_config()

    def setup_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å."""
        self.setWindowTitle("Launcher")
        self.setFixedSize(1240, 680)
        self.setWindowIcon(QIcon(os.path.join(os.path.dirname(__file__), '..', 'assets', 'launcher_icon.ico')))
        self.setStyleSheet("""
            QMainWindow {
                background-image: url('assets/background.png');
                background-repeat: no-repeat;
                background-attachment: fixed;
            }
            QMessageBox {
                background-color: #2b2b2b;
                color: #ffffff;
            }
            QMessageBox QLabel {
                color: #ffffff;
            }
            QMessageBox QPushButton {
                background-color: #3a3a3a;
                color: #ffffff;
                border: 1px solid #4a4a4a;
                padding: 5px;
                min-width: 60px;
                min-height: 20px;
            }
            QMessageBox QPushButton:hover {
                background-color: #4a4a4a;
            }
        """)

        self.centralwidget = QWidget(self)
        self.setCentralWidget(self.centralwidget)

        self.logo = QLabel(self.centralwidget)
        self.logo.setAlignment(Qt.AlignCenter)
        self.set_logo_icon(logo_path)
        self.logo.setGeometry(315, 70, 570, 150)

        self.username = QComboBox(self.centralwidget)
        self.username.setEditable(False)
        self.username.setStyleSheet("""
            QComboBox {
                font-size: 20px; 
                background-color: rgba(0, 0, 0, 128); 
                border: 1px solid #2C3E50; 
                border-radius: 5px; 
                padding: 5px; 
                color: white;
            }
            QComboBox QAbstractItemView {
                background-color: rgba(0, 0, 0, 128);
                color: #ffffff;
                selection-background-color: rgba(120, 120, 120, 128);
            }
        """)
        self.username.setGeometry(400, 420, 250, 50)

        self.start_progress = QProgressBar(self.centralwidget)
        self.start_progress.setVisible(False)
        self.start_progress.setStyleSheet("""
            QProgressBar { 
                color: white; 
                border: 1px solid #2C3E50; 
                border-radius: 5px; 
                background-color: rgba(0, 0, 0, 220); 
            } 
            QProgressBar::chunk { 
                background-color: rgba(0, 255, 180, 160); 
            }
        """)
        self.start_progress.setGeometry(310, 500, 570, 30)

        self.start_button_vanilla = QPushButton(self.centralwidget)
        self.start_button_vanilla.setText('–ò–≥—Ä–∞—Ç—å')
        self.start_button_vanilla.setGeometry(400, 300, 370, 80)
        self.start_button_vanilla.setStyleSheet(
            "QPushButton {"
            "background-color: rgba(0, 0, 0, 128);"
            "border-radius: 10px;"
            "font-size: 34px;"
            "text-align: center;"
            "color: white;"
            "}"
            "QPushButton:hover {"
            "background-color: rgba(0, 255, 60, 128);"
            "border-radius: 10px;"
            "font-size: 36px;"
            "text-align: center;"
            "color: white;"
            "}"
            "QPushButton:pressed {"
            "background-color: rgba(0, 255, 180, 128);"
            "border-radius: 10px;"
            "font-size: 34px;"
            "text-align: center;"
            "color: white;"
            "}"
        )

        self.username_button = QPushButton(self.centralwidget)
        self.username_button.setText('‚úö')
        self.username_button.setStyleSheet(
            "QPushButton {"
            "background-color: rgba(0, 0, 0, 128);"
            "border-radius: 5px;"
            "font-size: 32px;"
            "text-align: center;"
            "color: white;"
            "border: 1px solid #2C3E50;"
            "}"
            "QPushButton:hover {"
            "background-color: rgba(120, 210, 127, 128);"
            "border-radius: 5px;"
            "font-size: 32px;"
            "text-align: center;"
            "color: white;"
            "border: 1px solid #2C3E50;"
            "}"
        )
        self.username_button.setGeometry(660, 420, 50, 50)
        self.username_button.clicked.connect(self.show_auth_window)

        self.open_folder = QPushButton(self.centralwidget)
        self.open_folder.setText('üìÅ')
        self.open_folder.setStyleSheet(
            "QPushButton {"
            "background-color: rgba(0, 0, 0, 128);"
            "border-radius: 5px;"
            "font-size: 28px;"
            "text-align: center;"
            "color: white;"
            "border: 1px solid #2C3E50;"
            "}"
            "QPushButton:hover {"
            "background-color: rgba(120, 210, 127, 128);"
            "border-radius: 5px;"
            "font-size: 28px;"
            "text-align: center;"
            "color: white;"
            "border: 1px solid #2C3E50;"
            "}"
        )
        self.open_folder.setGeometry(720, 420, 50, 50)
        self.open_folder.clicked.connect(self.show_folder_minecraft)

        self.settings = QPushButton(self.centralwidget)
        self.settings.setText('‚öô')
        self.settings.setGeometry(40, 600, 50, 50)
        self.settings.clicked.connect(self.show_settings_window)
        self.settings.setStyleSheet(
            "QPushButton {"
            "background-color: rgba(0, 0, 0, 0);"
            "border-radius: 10px;"
            "font-size: 40px;"
            "text-align: center;"
            "color: white;"
            "}"
            "QPushButton:hover {"
            "background-color: rgba(0, 255, 60, 0);"
            "border-radius: 10px;"
            "font-size: 42px;"
            "text-align: center;"
            "color: white;"
            "}"
            "QPushButton:pressed {"
            "background-color: rgba(0, 255, 180, 0);"
            "border-radius: 10px;"
            "font-size: 40px;"
            "text-align: center;"
            "color: white;"
            "}"
        )

        self.start_button_vanilla.clicked.connect(self.launch_game)

    def setup_threads(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ—Ç–æ–∫–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã."""
        self.launch_thread = LaunchThread()
        self.launch_thread.state_update_signal.connect(self.state_update)
        self.launch_thread.progress_update_signal.connect(self.update_progress)
        self.launch_thread.game_launched_signal.connect(self.hide_launcher)
        self.launch_thread.game_closed_signal.connect(self.show_launcher)

    def load_configs(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã."""
        self.config = load_config()
        self.config_options = load_config_options()

    def hide_launcher(self):
        """–°–∫—Ä—ã–≤–∞–µ—Ç –ª–∞—É–Ω—á–µ—Ä –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã."""
        self.hide()

    def show_launcher(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ª–∞—É–Ω—á–µ—Ä –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –∏–≥—Ä—ã."""
        self.show()

    def show_auth_window(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."""
        from gui.auth import Auth
        if not hasattr(self, 'auth_window') or self.auth_window is None:
            self.auth_window = Auth(self)
            self.auth_window.closed.connect(self.on_auth_closed)
        self.auth_window.show()

    def on_auth_closed(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."""
        self.auth_window = None
        self.config = load_config()
        self.apply_config()

    def show_settings_window(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
        if not hasattr(self, 'settings_window') or self.settings_window is None:
            self.settings_window = Settings(self)
            self.settings_window.closed.connect(self.on_settings_closed)
        self.settings_window.show()

    def on_settings_closed(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ª–∞—É–Ω—á–µ—Ä –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
        self.settings_window = None
        self.show()

    def apply_config(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É."""
        self.username.clear()
        user_list = self.config.get('userSet', {}).get('list', [])
        for user in user_list:
            username = user['username']
            if 'token' in user and user['token']:
                icon = QIcon('assets/microsoft_icon.png')
            else:
                icon = QIcon('assets/pirate_icon.png')
            self.username.addItem(icon, username)
        selected_username = self.config.get('userSet', {}).get('selected', {}).get('username', '')
        if selected_username:
            index = self.username.findText(selected_username)
            if index != -1:
                self.username.setCurrentIndex(index)

    def set_logo_icon(self, path):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª–æ–≥–æ—Ç–∏–ø –ª–∞—É–Ω—á–µ—Ä–∞."""
        if os.path.exists(path):
            pixmap = QPixmap(path)
            self.logo.setPixmap(pixmap.scaledToHeight(140)) 
        else:
            logging.warning(f"Logo file not found: {path}")
            QMessageBox.warning(self, "Error", f"Logo file not found: {path}")

    def validate_input(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        if not self.username.currentText().strip():
            QMessageBox.warning(self, "Input Error", "Username –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            return False
        return True
    
    def check_updates(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –∏–≥—Ä—ã."""
        with open(version, 'r') as f:
            current_version = json.load(f)
        return checkUpdateModpack(current_version['version'])

    def state_update(self, value):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Ç–æ–∫–∞."""
        self.start_button_vanilla.setDisabled(value)
        self.start_progress.setVisible(value)

    def update_progress(self, progress, max_progress, label):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä."""
        self.start_progress.setValue(progress)
        self.start_progress.setMaximum(max_progress)
        self.start_progress.setFormat(label)

    def launch_game(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."""
        if not self.validate_input():
            return
        
        self.updateInfo = self.check_updates()

        if self.updateInfo:
            if self.updateInfo.get('updateNeeded', True):
                self.start_button_vanilla.setText('–û–±–Ω–æ–≤–∏—Ç—å')
                if downloadUpdateModpack(minecraft_directory, self.updateInfo.get('updateFolder', [])):
                    QMessageBox.information(self, "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ", "–ò–¥—ë—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!")
                    self.start_button_vanilla.setText('–ò–≥—Ä–∞—Ç—å')
                else:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
                    return
            else:
                self.start_button_vanilla.setText('–ò–≥—Ä–∞—Ç—å')
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
            return 
        selected_version = '1.20.4'
        self.launch_thread.launch_setup_signal.emit(selected_version, self.username.currentText(), self.config_options.get('minecraft_folder'))
        self.launch_thread.start()

    def show_error_message(self, title, message):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ."""
        QMessageBox.critical(self, title, message)

    def show_folder_minecraft(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É —Å –∏–≥—Ä–æ–π –≤ —Ñ–∞–π–ª–æ–≤–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ."""
        folder = self.config_options['minecraft_folder']
        if not os.path.exists(folder):
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–£–∫–∞–∑–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return
        
        if sys.platform == "win32":
            os.startfile(folder)
        elif sys.platform == "darwin":
            os.system(f"open {folder}")
        else:
            os.system(f"xdg-open {folder}")